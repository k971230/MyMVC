<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="member">

	<!-- ==== 로그인 처리하기 ==== -->         	
	<select id="getLoginMember" resultType="com.spring.app.domain.MemberVO" parameterType="HashMap"> 
		SELECT userid, name, email, mobile, postcode, address, detailaddress, extraaddress, gender 
		     , birthday, coin, point, registerday, pwdchangegap 
			 , nvl( lastlogingap , trunc( months_between(sysdate, to_date(registerday, 'yyyy-mm-dd'))) ) AS lastlogingap  
			 , idle
			 , gradelevel  
		FROM 
		( 
		 select userid, name, email, mobile, postcode, address, detailaddress, extraaddress, gender  
		      , birthday, coin, point, to_char(registerday, 'yyyy-mm-dd') AS registerday  
		      , trunc( months_between(sysdate, lastpwdchangedate) ) AS pwdchangegap 
		      , idle 
		      , gradelevel  
		 from tbl_member 
		 where status = 1 and userid = #{userid} and pwd = #{pwd}  
		) M 
		CROSS JOIN 
		( 
		 select trunc( months_between(sysdate, max(logindate)) ) AS lastlogingap 
		 from tbl_loginhistory 
		 where fk_userid = #{userid} 
		) H
	</select>
	
	<!-- ==== tbl_member 테이블의 idle 컬럼의 값을 1로 변경하기 ==== -->
	<update id="updateIdle" parameterType="String">
		update tbl_member set idle = 1 
		where userid = #{userid}
	</update>
	
	<insert id="registerMember" parameterType="com.spring.app.domain.MemberVO">
	    insert into tbl_member(userid, pwd, name, email, mobile, postcode, address, detailaddress, extraaddress, gender, birthday)
		values(#{userid}, #{pwd}, #{name}, #{email}, #{mobile}, #{postcode}, #{address}, #{detailaddress}, #{extraaddress}, #{gender}, #{birthday})
	</insert>
	
	<select id="idDuplicateCheck" parameterType="String" resultType="String">
		 select userid from tbl_member where userid = #{userid}
	</select>
	
	<select id="emailDuplicateCheck" parameterType="String" resultType="String">
		 select email from tbl_member where email = #{email}
	</select>
	
	<select id="emailDuplicateCheck2" parameterType="HashMap" resultType="String">
		 select email from tbl_member where userid != #{userid} and email = #{email} 
	</select>

	<select id="duplicatePwdCheck" parameterType="HashMap" resultType="String">
		 select pwd from tbl_member where userid = #{userid} and pwd = #{new_pwd} 
	</select>	
	
	
	<update id="updateMember" parameterType="com.spring.app.domain.MemberVO">
		update tbl_member set name = #{name}
		                     , pwd = #{pwd}
					   		 , email = #{email}
		                     , mobile = #{mobile}
		                     , postcode = #{postcode} 
		                     , address = #{address}
		                     , detailaddress = #{detailaddress}
		                     , extraaddress = #{extraaddress}
		                     , lastpwdchangedate = sysdate
				 where userid = #{userid}
	</update>
	
	
	
	<update id="coinUpdateLoginUser" parameterType="HashMap">
		update tbl_member set coin = coin + #{coinmoney}, point = point + #{point}
		 where userid = #{userid}
	</update>
	
	
</mapper>